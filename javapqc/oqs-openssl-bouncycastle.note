1. javapqc/post quantum openssl client 
1.1  run.sh
1.2 post quantum openssl
1.2.1 cd open-quantum-safe
1.2.2 export LD_LIBRARY_PATH=/home/kxie/open-quantum-safe/openssl-install/openssl/lib/
1.2.3 openssl-install/openssl/bin/openssl s_client -groups X25519 -CAfile springboot-demo-cert.pem
2. javapqc client and server, change the code
3. Spring boot example/post quantum openssl client
3.1 Run spring boot
 kxie@kxie-ubuntu-20:~/github-kaiduanx/springboot-tls/example-1$ pwd
/home/kxie/github-kaiduanx/springboot-tls/example-1

./run.sh

3.2 kxie@kxie-ubuntu-20:~/open-quantum-safe$ openssl-install/openssl/bin/openssl s_client -groups X25519 -CAfile springboot-demo-cert.pem  -connect 127.0.0.1:8080

4. Build openssl with post quantum
4.1.1 git checkout openssl
4.1.2 git checkout liboqs
4.1.3 cd liboqs, mkdir build, cd build
cmake -GNinja -DCMAKE_INSTALL_PREFIX=../../openssl/oqs ..
4.2 cd post-quantum-safe/openssl
4.2.1 ./Configure shared linux-x86_64 --debug --prefix=/home/kxie/open-quantum-safe/openssl-install/openssl --openssldir=/home/kxie/open-quantum-safe/openssl-install/ssl -DOQS_DEFAULT_GROUPS=\"p256_frodo640aes:X25519\" -lm
4.2.2 make
4.3.3 make install

5. Convert pkcs12 to PEM
https://stackoverflow.com/questions/15144046/converting-pkcs12-certificate-into-pem-using-openssl
openssl pkcs12 -in path.p12 -out newfile.crt.pem -clcerts -nokeys
openssl pkcs12 -in path.p12 -out newfile.key.pem -nocerts -nodes

6. Generate self-signed pkcs12 certificate for SpringBoot
https://codersathi.com/how-to-use-self-signed-ssl-certificate-in-spring-boot-application/
keytool -genkeypair -alias demo -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore demo.p12 -validity 3650

7. export certificate from keystore
keytool -export -alias identity -file cert.p12 -keystore ~/Desktop/identity.p12 -storetype PKCS12
openssl pkcs12 -in ~/Desktop/identity.p12 -out ~/Desktop/cert.pem -clcerts -nokeys
8. Java tls-server/openssl client
8.1 Run java as tls-server.
cd open-quantum-safe/oqs-bouncycastle/javapqc
./run-tls-server.sh
8.2 Run openssl as client.
openssl-install/openssl/bin/openssl s_client -CAfile ~/Desktop/cert.pem -connect 127.0.0.1:8080
8.3 Run openssl as client with hybrid key exchange
openssl-install/openssl/bin/openssl s_client -groups p256_frodo640aes -CAfile ~/Desktop/cert.pem -connect 127.0.0.1:8080 

